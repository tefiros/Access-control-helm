realm: "keycloakOpa"
enabled: true
displayName: "keycloakOpa"

loginWithEmailAllowed: true
resetPasswordAllowed: true

loginTheme: keycloak
accountTheme: keycloak.v3
emailTheme: keycloak

eventsListeners:
  - "jboss-logging"
  - "custom-event-listener"

eventsEnabled: true

clients:
  - clientId: kck
    protocol: openid-connect
    name: kck
    description: "kck"
    enabled: true
    publicClient: false
    standardFlowEnabled: true
    directAccessGrantsEnabled: true
    alwaysDisplayInConsole: true
    serviceAccountsEnabled: true
    fullScopeAllowed: false
    secret: "secret"

userFederationProviders:
  - displayName: "ldap"
    providerName: "ldap"
    config:
      enabled: "true"
      vendor: "other"
      connectionUrl: "ldap://access-control-openldap"
      useTruststoreSpi: "always"
      connectionPooling: "false"
      bindType: "simple"
      bindDn: "cn=admin,dc=example,dc=com"
      bindCredential: "Acc3ss@C0ntr0L_"
      editMode: "READ_ONLY"
      usersDn: "ou=users,dc=example,dc=com"
      usernameLDAPAttribute: "uid"
      rdnLDAPAttribute: "uid"
      uuidLDAPAttribute: "entryUUID"
      userObjectClasses: "inetOrgPerson, organizationalPerson"
      searchScope: "1"
      pagination: "false"
      referrals: "ignore"
      importEnabled: "true"
      syncRegistrations: "true"
      allowKerberosAuthentication: "false"
      useKerberosForPasswordAuthentication: "false"
      cachePolicy: "DEFAULT"
      validatePasswordPolicy: "false"
      trustEmail: "false"
      enablePasswordModifyExtendedOp: "false"

userFederationMappers:
  - name: "first name"
    id: "firstNameMapper"
    federationProviderDisplayName: "ldap"
    federationMapperType: "user-attribute-ldap-mapper"
    config:
      user.model.attribute: "firstName"
      ldap.attribute: "cn"
      read.only: "true"
      always.read.value.from.ldap: "true"
      is.mandatory.in.ldap: "true"
      attribute.default.value: "false"
      is.binary.attribute: "false"
  - name: "last name"
    id: "lastNameMapper"
    federationProviderDisplayName: "ldap"
    federationMapperType: "user-attribute-ldap-mapper"
    config:
      user.model.attribute: "lastName"
      ldap.attribute: "sn"
      read.only: "true"
      always.read.value.from.ldap: "true"
      is.mandatory.in.ldap: "true"
      attribute.default.value: "false"
      is.binary.attribute: "false"
  - name: "username"
    id: "usernameMapper"
    federationProviderDisplayName: "ldap"
    federationMapperType: "user-attribute-ldap-mapper"
    config:
      user.model.attribute: "username"
      ldap.attribute: "uid"
      read.only: "true"
      always.read.value.from.ldap: "false"
      is.mandatory.in.ldap: "true"
      attribute.default.value: "false"
      is.binary.attribute: "false"
  - name: "roles"
    id: "roleMapper"
    federationProviderDisplayName: "ldap"
    federationMapperType: "role-ldap-mapper"
    config:
      roles.dn: "ou=roles,dc=example,dc=com"
      role.name.ldap.attribute: "cn"
      role.object.classes: "posixGroup"
      membership.ldap.attribute: "memberUid"
      membership.attribute.type: "UID"
      membership.user.ldap.attribute: "uid" 
      mode: "READ_ONLY"
      user.roles.retrieve.strategy: "LOAD_ROLES_BY_MEMBER_ATTRIBUTE"
      memberof.ldap.attribute: "memberOf"
      use.realm.roles.mapping: "true"



